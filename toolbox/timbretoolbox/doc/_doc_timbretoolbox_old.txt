Subject:	Documentation of the Timbre Toolbox (Toolbox for Matlab)
Date: 		2011/12/05
Version:	1.4

-------------------------------------
Matlab Toolbox accompanying the paper 
Title: 		"The Timbre Toolbox: Extracting audio descriptors from musical signals" 
Author: 	Geoffroy Peeters, Bruno L Giordano, Patrick Susini, Nicolas Misdariis, and Stephen McAdams 
appeared in Journal of Acoustical Society of America, 130 (5), November 2011
-------------------------------------


-------------------------------------
CONTENT
-------------------------------------
The Timbre Toolbox is a set of Matlab functions and mex files for computing the audio descriptors described in Peeters et al. (JASA-130 (5) ). 
It is organized as a main directory and a set of sub-directories containing classes and sub-functions.

The main function is Gtimbredescriptor
It:
	- configures the Matlab path
	- creates a list of audio files to be processed (Gget_filelist)
	- performs batch extraction of the audio descriptors for each audiofile 
		-- first it extracts the features (Gget_desc_onefile)
		-- then it computes the temporal modeling (median, iqr) of the audio descriptors (Gget_temporalmodeling_onefile)


-------------------------------------
INSTALLATION
-------------------------------------
1) Unzip the .zip file in a directory
2) Configure the ROOT_DIR variable in Gtimbredescriptor.m to match the directory in which you have installed the Toolbox
3) Configure the w_Directory and EXT variables in Gtimbredescriptor.m to match the directory in which your audio files are located and the sound file extension 
4) In order to allow to compute the harmonic features, you must download the swipep.m function.
	This can be found at the following URL: http://www.cise.ufl.edu/~acamacho/publications/swipep.m
	You must then put this file in the directory $ROOT_DIR/classes/cHarmRep/private/*
5) ERB features are computed using mex files. In order to use them, you need to first compile them for your specific computer (Windows, Mac-OS or Linux).
	For this, go (from inside matlab using current directoty - 'cd' command) to the directory $ROOT_DIR/classes/@cERBRep/private
	and type 'mex rsmooth.c'
	WARNING: 	In order to compile the mex file you must have a properly configured mex envirronment (including a c compiler).
				Type 'mex -setup' to configure it.
				The mex file will only be called if you use ERBgammatone. If you do not succeed to compile the mex file, just set do_s.b_ERBgam=0.

-------------------------------------
USAGE
-------------------------------------
The main function is Gtimbredescriptor.m

-----------------------------------
* Setting the sound file directory

Change the line in Gtimbredescriptor
	w_Directory = ['.\soundexample\GreyWAV\'];				EXT = '.wav';
to match the directory where your audio files are located ('.\soundexample\GreyWAV\' in the example) and the extension of your audio files ('.wav' in the example).

-----------------------------------
* Configure the set of descriptors you want to compute. 

By default all the descriptors are computed.
If you don't want to compute a specific set of features, just set to 0 one of the following binary flags in Gtimbredescriptors.m
do_s.b_TEE				= 1;    % descriptors from the Temporal Energy Envelope and Audio Signal
do_s.b_STFTmag			= 1;    % descriptors from the STFT magnitude
do_s.b_STFTpow			= 1;    % descriptors from the STFT power
do_s.b_Harmonic			= 1;	% descriptors from Harmonic Sinusoidal Modeling representation
do_s.b_ERBfft			= 1;    % descriptors from ERB representation (ERB being computed using FFT)
do_s.b_ERBgam			= 1;    % descriptors from ERB representation (ERB being computed using Gamma Tone Filter)

The following set of parameters in Gtimbredescriptors.m must only be changed by experts
config_s.xcorr_nb_coeff = 12;	% === defines the number of auto-correlation coefficients that will be used
config_s.threshold_harmo= 0.3;	% === defines the threshold [0,1] below which harmonic-features are not computed
config_s.nb_harmo		= 20;	% === defines the number of harmonics that will be extracted

-----------------------------------
* Extract audio descriptors by typing the following command at the Matlab prompt: '>> Gtimbredescriptor'

Gtimbredescriptor then runs in batch the audio descriptors extraction for each audio file (this is done by Gget_desc_onefile.m) 
and returns in the variable ALLDESC_s all the values of the audio descriptors.
Part of the descriptors computed by Gtimbredescriptor are time-varying (e.g., SpecCent, SpecSpread). 
The function Gget_temporalmodeling_onefile is designed to extract single-number descriptors from the time-varying descriptors (e.g., minimum of time-varying SpecCent).

-----------------------------------
* Temporal Modeling

By default Gget_temporalmodeling_onefile.m only performs Temporal Modeling according to MEDIAN and IQR (interquartile range) (Peeters et al., in press, JASA).
Gget_temporalmodeling_onefile can however extract multiple single-number descriptors from the time series. 
To do so, uncomment the following lines in the code:
%TM_s.([name '_min'])	= min(value, [], 2);
%TM_s.([name '_max'])	= max(value, [], 2);
%TM_s.([name '_mean'])	= mean(value, 2);
%TM_s.([name '_std'])	= std(value, [], 2);
TM_s.([name '_median']) = median(value, 2);
TM_s.([name '_iqr'])	= 0.7413*iqr(value, 2);  %note that the constant 0.7413 makes iqr a robust estimator of the standard deviation of normally-distributed data that include outliers. If this approximation is not necessary, remove 0.7413 in order to compute the interquartile range as the difference between the 25th and 75th percentiles.

-----------------------------------
* Writting the results

For each audio file, the resulting global audio descriptors (such as LAT, AttSlope) and Temporal Modelings of time-varying audio descriptors (SpecCent, SpecSpread, ...) (output by Gget_temporalmodeling_onefile) are stored into a text file.
This is performed by the function Gwrite_resultfile.m

The results are written in the format "descriptor_name \TAB value \n"

The descriptor names used are exactly the abbreviation proposed in the JASA paper.
Example:
TEE_Att	0.073084
	is the Attack from the Temporal Energy Envelope
TEE_Dec	0.162018
	is the Decrease from the Temporal Energy Envelope
TEE_RMSEnv_median	0.004963
	is the RMS Energy Envelope from the Temporal Energy Envelope after a MEDIAN temporal modeling
TEE_RMSEnv_iqr	0.00111
	is the RMS Energy Envelope from the Temporal Energy Envelope after a IQR temporal modeling
AS_AutoCorr1_median	0.880100
	is the Autocorrelation coefficients number 1 from the Audio Signal after a MEDIAN temporal modeling
STFTmag_SpecCent_median	0.054615
	is the Spectral Centroid from the STFT magnitude after a MEDIAN temporal modeling
	


-------------------------------------
ON PROGRAMMING
-------------------------------------

-----------------------------------
* History

The Timbre Toolbox started from the Matlab version of ircamdescriptor (Geoffroy Peeters) 
which itself contains inputs from J. Krimphoff, Nicolas Misdariis, Patrick Susini and Stephen McAdams.
It was then modified at McGill by Cory Kereliuk which made it object-oriented.
It was then modified again by Geoffroy Peeters at Ircam to make the present version.

The Timbre Toolbox uses functions kindly provided by Alain de Cheveign√©: 
- the functions to read the aif/aiff audio files ($ROOT_DIR/_tools_sf/)
- the functions to compute the ERB representation ($ROOT_DIR/classes/@cERBRep/private)


-----------------------------------
* Global understanding

The Toolbox is (mainly) written as a set of classes that correspond to the various signal representation.
- Temporal Energy Envelope and Audio Signal	are represented by the class @cSound
- STFTmagnitude and STFTpower by @cFFTRep
- ERBfft and EFBgammatone by @cERBRep
- Both @cFFTRep and @cERBRep inherit from the class @c2xDistr which is the abstraction of 2D data.
- Only the class @cHarmRep (Harmonic features) have there own class


-----------------------------------
* List of files and directories organisation

	./tools/:		various tool functions
	./tools_sf/: 	a set of function to read .aif/.aiff files
	./classes/:		set of classes
		@cSound		class for audio sound and temporal descriptors (waveform based)
		@cDescr		class for audio descriptor  
		@cFFTRep	class for audio descriptor computed using STFT representation
		@cERBRep	class for audio descriptor computed using ERB representation
		@c2xDistr 	generic class for 2D descriptors
		@cHarmRep	class for audio descriptor computed using Harmonic Sinusoidal Model representation
		
-----------------------------------
* Variable-naming conventions

VARIABLE SUFFIX
*_s			denotes a tructure
*_m			matrix
*_v			vector
*_o			object
VARIABLE PREFIX
f_*			float
b_*			binary
i_*			integer
w_*			word

VARIABLE SUFFIX
*_median 	denotes median value of the descriptor over time
*_iqr 		denotes InterQuartile Range (25%-75%) value of the descriptor over time multiplied by 0.7413 (to be similar to standard deviation)
*_min		... min value ...
*_max		... max value ...
*_mean		... mean value ...
*_std		... std value ...



-------------------------------------
COMPLETE LIST OF AUDIO DESCRIPTOTS computed by the TimbreToolbox
-------------------------------------

In the followong (*) denotes global descriptors (not time-varying)

-----------------------------------
TEE		descriptors from the Temporal Energy Envelope
	*Att
	*Dec
	*Rel
	*LAT	
	*AttSlope 
	*DecSlope
	*TempCent
	*EffDur
	*FreqMod
	*AmpMod
	RMSEnv
-----------------------------------
SA		descriptors from the Audio Signal
	AutoCorr 1 ... 12
	ZcrRate
-----------------------------------
STFTmag		descriptors from the STFT magnitude
STFTpow		descriptors from the STFT power
ERBfft		descriptors from ERB representation (ERB being computed using FFT)
ERBgam		descriptors from ERB representation (ERB being computed using Gammatone Filter)
FFTHarm	descriptors from Harmonic Sinusoidal Modeling representation
	SpecCent
	SpecSpread
	SpecSkew
	SpecKurt
	SpecSlope
	SpecDecr
	SpecRollOff
	SpecVar
	FrameErg
-----------------------------------
only STFTmag	descriptors from the STFT magnitude
only STFTpow	descriptors from the STFT power
only ERBfft		descriptors from ERB representation (ERB being computed using FFT)
only ERBgam		descriptors from ERB representation (ERB being computed using Gammatone Filter)
	SpecFlat
	SpecCrest
-----------------------------------
only FFTHarm	descriptors from Harmonic Sinusoidal Modeling representation
	HarmErg
	NoiseErg
	Noisiness
	F0
	Inharm
	TriStim 1, 2, 3
	HarmDev
	OddEvenRatio
-----------------------------------	
	



